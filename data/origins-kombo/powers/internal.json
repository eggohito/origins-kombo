{
    "type": "origins:multiple",
    "max_combo": {
        "type": "origins:action_over_time",
        "interval": 1,
        "rising_action": {
            "type": "origins:execute_command",
            "command": "function origins-kombo:private/input/reached_max"
        },
        "condition": {
            "type": "origins:command",
            "command": "execute if score @s o-k.combo >= @s o-k.max_combo",
            "comparison": "==",
            "compare_to": 1
        }
    },
    "cooldown_timer": {
        "type": "origins:cooldown",
        "cooldown": 100,
        "hud_render": {
            "should_render": true,
            "bar_index": 1
        }
    },
    "cooldown_timer_start": {
        "type": "origins:action_over_time",
        "interval": 1,
        "rising_action": {
            "type": "origins:and",
            "actions": [
                {
                    "type": "origins:trigger_cooldown",
                    "power": "*:*_cooldown_timer"
                },
                {
                    "type": "origins:change_resource",
                    "resource": "*:*_timeout_timer",
                    "change": -69420
                },
                {
                    "type": "origins:execute_command",
                    "command": "function origins-kombo:private/reset"
                }
            ]
        },
        "condition": {
            "type": "origins:command",
            "command": "execute if entity @s[tag = origins-kombo.has_matching_kombo]",
            "comparison": "==",
            "compare_to": 1
        }
    },
    "timeout_timer": {
        "type": "origins:resource",
        "min": 0,
        "max": 40,
        "hud_render": {
            "should_render": true,
            "sprite_location": "origins:textures/gui/community/spiderkolo/resource_bar_03.png",
            "bar_index": 9,
            "condition": {
                "type": "origins:resource",
                "resource": "*:*_timeout_timer",
                "comparison": ">",
                "compare_to": 0
            }
        },
        "max_action": {
            "type": "origins:and",
            "actions": [
                {
                    "type": "origins:change_resource",
                    "resource": "*:*_timeout_timer",
                    "change": -69420
                },
                {
                    "type": "origins:execute_command",
                    "command": "function origins-kombo:private/reset"
                },
                {
                    "type": "origins:execute_command",
                    "command": "title @s actionbar {\"text\": \"\"}"
                },
                {
                    "type": "origins:delay",
                    "action": {
                        "type": "origins:execute_command",
                        "command": "title @s actionbar {\"text\": \"KOMBO cast timed out!\", \"color\": \"red\"}"
                    },
                    "ticks": 2
                }
            ]
        }
    },
    "timeout_timer_start": {
        "type": "origins:action_over_time",
        "interval": 1,
        "entity_action": {
            "type": "origins:change_resource",
            "resource": "*:*_timeout_timer",
            "change": 1
        },
        "condition": {
            "type": "origins:and",
            "conditions": [
                {
                    "type": "origins:command",
                    "command": "execute if entity @s[tag = origins-kombo.casting]",
                    "comparison": "==",
                    "compare_to": 1
                },
                {
                    "type": "origins:command",
                    "command": "execute unless entity @s[tag = origins-kombo.has_matching_kombo]",
                    "comparison": "==",
                    "compare_to": 1
                }
            ]
        }
    },
    "no_kombo_delay": {
        "type": "origins:action_over_time",
        "interval": 1,
        "entity_action": {
            "type": "origins:execute_command",
            "command": "scoreboard players operation @s o-k.buffer -= @s o-k.buffer"
        },
        "condition": {
            "type": "origins:and",
            "conditions": [
                {
                    "type": "origins:command",
                    "command": "execute if entity @s[tag = origins-kombo.max_combo_reached]",
                    "comparison": "==",
                    "compare_to": 1
                },
                {
                    "type": "origins:command",
                    "command": "execute unless entity @s[tag = origins-kombo.has_matching_kombo]",
                    "comparison": "==",
                    "compare_to": 1
                },
                {
                    "type": "origins:scoreboard",
                    "objective": "o-k.buffer",
                    "comparison": ">",
                    "compare_to": 0
                }
            ]
        }
    },
    "no_kombo_apply": {
        "type": "origins:action_over_time",
        "interval": 1,
        "rising_action": {
            "type": "origins:and",
            "actions": [
                {
                    "type": "origins:execute_command",
                    "command": "function origins-kombo:private/no_match"
                },
                {
                    "type": "origins:execute_command",
                    "command": "title @s actionbar {\"text\": \"\"}"
                },
                {
                    "type": "origins:delay",
                    "action": {
                        "type": "origins:execute_command",
                        "command": "title @s actionbar {\"text\": \"Unregistered kombo pattern!\", \"color\": \"red\"}"
                    },
                    "ticks": 2
                }
            ]
        },
        "condition": {
            "type": "origins:and",
            "conditions": [
                {
                    "type": "origins:command",
                    "command": "execute if entity @s[tag = origins-kombo.max_combo_reached]",
                    "comparison": "==",
                    "compare_to": 1
                },
                {
                    "type": "origins:command",
                    "command": "execute unless entity @s[tag = origins-kombo.has_matching_kombo]",
                    "comparison": "==",
                    "compare_to": 1
                },
                {
                    "type": "origins:scoreboard",
                    "objective": "o-k.buffer",
                    "comparison": "==",
                    "compare_to": 0
                }
            ]
        }
    },
    "remove_kombonents": {
        "type": "origins:action_on_callback",
        "entity_action_removed": {
            "type": "origins:execute_command",
            "command": "function origins-kombo:private/reset"
        }
    },
    "kombo_mode_primary": {
        "type": "origins:active_self",
        "entity_action": {
            "type": "origins:and",
            "actions": [
                {
                    "type": "origins:if_else",
                    "condition": {
                        "type": "origins:and",
                        "conditions": [
                            {
                                "type": "origins:command",
                                "command": "execute if entity @s[tag = origins-kombo.casting]",
                                "comparison": "==",
                                "compare_to": 1
                            }
                        ]
                    },
                    "if_action": {
                        "type": "origins:execute_command",
                        "command": "function origins-kombo:private/input/reached_max"
                    },
                    "else_action": {
                        "type": "origins:and",
                        "actions": [
                            {
                                "type": "origins:execute_command",
                                "command": "tag @s add origins-kombo.casting"
                            },
                            {
                                "type": "origins:execute_command",
                                "command": "title @s actionbar {\"text\": \"\"}"
                            },
                            {
                                "type": "origins:delay",
                                "action": {
                                    "type": "origins:execute_command",
                                    "command": "title @s actionbar {\"text\": \"+ KOMBO MODE +\", \"color\": \"green\"}"
                                },
                                "ticks": 2
                            }
                        ]
                    }
                },
                {
                    "type": "origins:execute_command",
                    "command": "function #origins-kombo:key/origins/primary_active"
                }
            ]
        },
        "cooldown": 1,
        "hud_render": {
            "should_render": false
        },
        "key": {
            "key": "key.origins.primary_active"
        },
        "condition": {
            "type": "origins:resource",
            "resource": "*:*_cooldown_timer",
            "comparison": "==",
            "compare_to": 0
        }
    },
    "kombo_mode_secondary": {
        "type": "origins:active_self",
        "entity_action": {
            "type": "origins:and",
            "actions": [
                {
                    "type": "origins:if_else",
                    "condition": {
                        "type": "origins:command",
                        "command": "execute if entity @s[tag = origins-kombo.casting]",
                        "comparison": "==",
                        "compare_to": 1
                    },
                    "if_action": {
                        "type": "origins:and",
                        "actions": [
                            {
                                "type": "origins:execute_command",
                                "command": "tag @s add origins-kombo.force_stop"
                            },
                            {
                                "type": "origins:change_resource",
                                "resource": "*:*_timeout_timer",
                                "change": -69420
                            },
                            {
                                "type": "origins:execute_command",
                                "command": "function origins-kombo:private/reset"
                            },
                            {
                                "type": "origins:execute_command",
                                "command": "title @s actionbar {\"text\": \"\"}"
                            },
                            {
                                "type": "origins:delay",
                                "action": {
                                    "type": "origins:and",
                                    "actions": [
                                        {
                                            "type": "origins:execute_command",
                                            "command": "title @s actionbar {\"text\": \"KOMBO cast forcibly stopped!\", \"color\": \"red\"}"
                                        },
                                        {
                                            "type": "origins:execute_command",
                                            "command": "tag @s remove origins-kombo.force_stop"
                                        }
                                    ]
                                },
                                "ticks": 2
                            }
                        ]
                    },
                    "else_action": {
                        "type": "origins:and",
                        "actions": [
                            {
                                "type": "origins:execute_command",
                                "command": "tag @s add origins-kombo.casting"
                            },
                            {
                                "type": "origins:execute_command",
                                "command": "title @s actionbar {\"text\": \"+ KOMBO MODE +\", \"color\": \"green\"}"
                            }
                        ]
                    }
                },
                {
                    "type": "origins:execute_command",
                    "command": "function #origins-kombo:key/origins/secondary_active"
                }
            ]
        },
        "cooldown": 1,
        "hud_render": {
            "should_render": false
        },
        "key": {
            "key": "key.origins.secondary_active"
        },
        "condition": {
            "type": "origins:resource",
            "resource": "*:*_cooldown_timer",
            "comparison": "==",
            "compare_to": 0
        }
    },
    "hidden": true
}